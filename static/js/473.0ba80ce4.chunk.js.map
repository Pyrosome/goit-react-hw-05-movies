{"version":3,"file":"static/js/473.0ba80ce4.chunk.js","mappings":"4KAuEA,UAjEqB,WAAO,IAAD,IAEjBA,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAC5CC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,IAAgBN,GACXO,MAAK,SAAAC,GACFJ,EAASI,EAAIC,KAChB,IACAC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZG,MAAM,gDACT,GACR,GAAE,CAACd,IAEJ,IAAQe,EAA0EZ,EAA1EY,GAAIC,EAAsEb,EAAtEa,YAAaC,EAAyDd,EAAzDc,MAAOC,EAAkDf,EAAlDe,aAAcC,EAAoChB,EAApCgB,aAAeC,EAAqBjB,EAArBiB,SAAUC,EAAWlB,EAAXkB,OACjEC,EAAOJ,EAAY,WAAOA,EAAaK,MAAM,EAAG,GAA7B,KAAqC,GACxDC,EAAQL,EAAeA,EAAaM,WAAWF,MAAM,EAAG,GAAK,GAC7DG,EAAQL,EAAUA,EAAOM,KAAI,SAAAD,GAAW,OAAOA,EAAME,IAAM,IAAGC,KAAK,MAAQ,GAEjF,OACI,iBAAKC,MAAO,CAACC,YAAa,QAA1B,WACI,SAAC,KAAD,CAAMC,GAAIpC,EAAaqC,QAAvB,SAAiC,6BAAiC,mBAAK,mBAEvE,iBAAKH,MAAO,CAACI,QAAS,QAAtB,WACI,gBAAKC,IAAKnB,EAAW,0CAAsCA,GAAgB,GAAIoB,IAAKnB,EACpFa,MAAO,CAACO,SAAU,QAASC,YAAa,6BAA8BC,QAAS,oBAC/E,gBAAIT,MAAO,CAACC,YAAa,OAAQS,YAAa,QAA9C,WACI,2BACI,0BAAKvB,EAAL,IAAaK,MACb,wCAAgBE,SAEpB,2BACI,sCACA,uBAAIJ,QAER,2BACI,oCACA,uBAAIM,cAKhB,4BACI,oDACA,2BACI,yBACI,SAAC,KAAD,CAAMM,GAAG,OAAOjB,GAAIA,EAApB,qBAEJ,yBACI,SAAC,KAAD,CAAMiB,GAAG,UAAUjB,GAAIA,EAAvB,8BAKZ,SAAC,KAAD,MAIX,C","sources":["Pages/MovieDetails.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { getMovieDetails } from \"service/APIMovieSearch\";\n\nconst MovieDetails = () => {\n\n    const location = useLocation();     \n    const backLocation = useRef(location.state?.from ?? '/movies')\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n\n        getMovieDetails(movieId)\n            .then(res => {\n                setMovie(res.data)\n            })\n            .catch(error => {\n                console.log(error);\n                alert('Sorry! We didn`t find any movie on this link.')\n            })\n    }, [movieId])\n    \n    const { id, poster_path, title, release_date, vote_average,  overview, genres } = movie;\n    const year = release_date ? `(${release_date.slice(0, 4)})` : ''\n    const score = vote_average ? vote_average.toString().slice(0, 3) : ''\n    const genre = genres ? (genres.map(genre => { return genre.name })).join(', ') : ''\n    \n    return (\n        <div style={{paddingLeft: '20px'}}>\n            <Link to={backLocation.current}>{'<- To the previous page'}</Link><br/><br/>\n\n            <div style={{display: 'flex'}} >\n                <img src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : ''} alt={title}\n                style={{maxWidth: '300px', borderRight: '1px solid rgb(153, 21, 69)', padding: '0 20px 0 20px'}} />\n                <ul style={{paddingLeft: '20px', marginRight: '50px'}}>\n                    <li>\n                        <h2>{title} {year}</h2>\n                        <p>User score: {score}</p>\n                    </li>\n                    <li>\n                        <h1>Overview</h1>\n                        <p>{overview}</p>\n                    </li>\n                    <li>\n                        <h1>Genres</h1>\n                        <p>{genre}</p>\n                    </li>\n                </ul>\n            </div>\n            \n            <div>\n                <h3>Additional information</h3>\n                <ul>\n                    <li>\n                        <Link to='cast' id={id}>Cast</Link>\n                    </li>\n                    <li>\n                        <Link to='reviews' id={id}>Reviews</Link>\n                    </li>\n                </ul>\n            </div>\n\n            <Outlet/>\n\n        </div>\n    )\n}\n\nexport default MovieDetails;"],"names":["location","useLocation","backLocation","useRef","state","from","movieId","useParams","useState","movie","setMovie","useEffect","getMovieDetails","then","res","data","catch","error","console","log","alert","id","poster_path","title","release_date","vote_average","overview","genres","year","slice","score","toString","genre","map","name","join","style","paddingLeft","to","current","display","src","alt","maxWidth","borderRight","padding","marginRight"],"sourceRoot":""}